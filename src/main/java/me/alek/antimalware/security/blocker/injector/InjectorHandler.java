package me.alek.antimalware.security.blocker.injector;

import me.alek.antimalware.AntiMalwarePlugin;
import me.alek.antimalware.security.SecurityManager;
import me.alek.antimalware.security.blocker.AbstractListener;
import me.alek.antimalware.utils.Utils;
import net.minecraft.server.v1_8_R3.EntityLiving;
import org.bukkit.Bukkit;
import org.bukkit.craftbukkit.v1_8_R3.entity.CraftPlayer;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.server.ServerCommandEvent;
import org.bukkit.plugin.PluginManager;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.function.Supplier;

public class InjectorHandler extends AbstractListener {

    public InjectorHandler(SecurityManager manager, PluginManager pluginManager) {
        super(manager, pluginManager);
    }

    @EventHandler(priority = EventPriority.LOWEST)
    public void inject(ServerCommandEvent event) {
        tryInject();
    }

    @EventHandler
    public void inject(PlayerJoinEvent event) {
        tryInject();
    }

    private void tryInject() {
        for (InjectType type : InjectType.values()) {
            if (type.getInjector().isInjected()) {
                continue;
            }
            Utils.runTaskLater(100L, () -> type.getInjector().inject());
            Utils.runTaskLater(36000L, () -> type.getInjector().reinject());
        }
    }

    private enum InjectType {
        COMMANDS(new CommandInjector()),
        LISTENERS(new ListenerInjector());

        private final Injector injector;

        InjectType(Injector injector) {
            this.injector = injector;
        }

        public Injector getInjector() {
            return injector;
        }
    }
}
