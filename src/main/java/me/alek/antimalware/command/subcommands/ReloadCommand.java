package me.alek.antimalware.command.subcommands;

import me.alek.antimalware.AntiMalwarePlugin;
import me.alek.antimalware.command.SubCommandImpl;
import me.alek.antimalware.scanning.ScanHandler;
import me.alek.antimalware.scanning.Scanner;
import me.alek.antimalware.utils.JARFinder;
import org.bukkit.command.CommandSender;
import org.bukkit.scheduler.BukkitRunnable;

import java.io.File;

public class ReloadCommand implements SubCommandImpl {
    @Override
    public boolean perform(CommandSender sender, String label, String[] args) {
        AntiMalwarePlugin.getSecurityManager().reload();

        Scanner scanner = ScanHandler.getLatestScanner();
        if (scanner.isScanning()) {
            int size = scanner.getFiles().size() - scanner.getService().getNotDoneFiles().size() - 1;
            sender.sendMessage("§8[§6AntiMalware§8] §7Serveren er allerede igang med at opdatere cache. Vent lidt... ("
                    + (size == -1 ? 0 : size) + "/" + scanner.getFiles().size() + ")");
            return true;
        }
        File dataFolder = AntiMalwarePlugin.getInstance().getDataFolder().getParentFile();
        sender.sendMessage("§8[§6AntiMalware§8] §7Reloader file cache og config...");
        new BukkitRunnable() {
            @Override
            public void run() {
                new Scanner(JARFinder.findAllJars(dataFolder)).startScan();
            }
        }.runTaskAsynchronously(AntiMalwarePlugin.getInstance());
        return true;
    }

    @Override
    public boolean executableByConsole() {
        return true;
    }

    @Override
    public String getUsage() {
        return "/antimalware reload";
    }

    @Override
    public String getName() {
        return "reload";
    }

    @Override
    public String getDescription() {
        return "Reloader file cache og config.";
    }

    @Override
    public String[] getAliases() {
        return new String[0];
    }
}
