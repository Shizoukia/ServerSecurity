package me.alek.antimalware.malware.checks.impl.detections;

import me.alek.antimalware.malware.enums.Risk;
import me.alek.antimalware.malware.checks.types.AbstractInstructionCheck;
import me.alek.antimalware.malware.checks.types.nodes.DetectionNode;
import me.alek.antimalware.utils.Pair;
import me.alek.antimalware.model.PluginProperties;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.LdcInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;

public class DiscordWebhookCheck extends AbstractInstructionCheck implements DetectionNode {

    public DiscordWebhookCheck() {
        super(LdcInsnNode.class);
    }

    @Override
    public Pair<String, String> preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        return null;
    }

    @Override
    public String processAbstractInsn(MethodNode methodNode, AbstractInsnNode abstractInsnNode, Path classPath) {
        LdcInsnNode ldcInsnNode = (LdcInsnNode) abstractInsnNode;
        Object value = ldcInsnNode.cst;
        if (!(value instanceof String)) {
            return null;
        }
        String asString = (String) value;
        if (!asString.contains("discord.com/api/webhooks")) {
            return null;
        }
        return "";
    }

    @Override
    public String getType() {
        return "Discord Webhook";
    }

    @Override
    public Risk getRisk() {
        return Risk.MODERATE;
    }
}
