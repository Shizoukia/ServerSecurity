package me.alek.antimalware.malware.checks.impl;

import me.alek.antimalware.malware.checks.types.EncryptedKeyCheck;
import me.alek.antimalware.malware.checks.types.ParseCheck;
import me.alek.antimalware.malware.checks.types.nodes.MalwareNode;
import me.alek.antimalware.malware.constants.checks.SkyrageLibraries;
import me.alek.antimalware.malware.enums.MalwareType;
import me.alek.antimalware.utils.Pair;
import me.alek.antimalware.model.PluginProperties;

import java.io.File;
import java.nio.file.Path;

public class OldSkyRageCheck extends EncryptedKeyCheck implements ParseCheck, MalwareNode {

    private SkyrageLibraries.LibrariesContainer container;

    @Override
    public void parse() {
        if (container != null) return;
        container = new SkyrageLibraries.LibrariesContainer();
    }

    @Override
    public MalwareType getType() {
        return MalwareType.SKYRAGE;
    }

    @Override
    public String[] getEncryptedKeys() {
        return new String[]{"http://files.skyrage.de/update", "http://files.skyrage.de/mvd", "http://files.ckyroor.com"};
    }

    @Override
    public Pair<String, String> preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        if (resolve(rootFolder, "plugin-config.bin")) {
            return new Pair<>("config-bin", null);
        }
        for (String metaInfString : container.getList()) {
            if (resolve(rootFolder, metaInfString)) {
                return new Pair<>("META-INF library", null);
            }
        }
        return null;
    }

}
