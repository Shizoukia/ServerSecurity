package me.alek.antimalware.malware.checks.impl;


import me.alek.antimalware.malware.enums.MalwareType;
import me.alek.antimalware.malware.checks.CheckAdapter;
import me.alek.antimalware.malware.checks.types.ParseCheck;
import me.alek.antimalware.malware.checks.types.nodes.MalwareNode;
import me.alek.antimalware.utils.Pair;
import me.alek.antimalware.model.PluginProperties;
import org.objectweb.asm.tree.ClassNode;

import java.io.File;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.List;

public class ThiccIndustriesCheck extends CheckAdapter implements MalwareNode, ParseCheck {

    private List<ThiccIndustriesVariant> classes;

    public static class ThiccIndustriesVariant {
        private final String classCheck;
        private final String variant;

        public String getClassCheck() {
            return classCheck;
        }

        public String getVariant() {
            return variant;
        }

        public ThiccIndustriesVariant(String classCheck, String variant) {
            this.classCheck = classCheck;
            this.variant = variant;
        }
    }

    @Override
    public void parse() {
        if (classes != null) return;
        classes = Arrays.asList(
                new ThiccIndustriesVariant("Injector", "Injector"),
                new ThiccIndustriesVariant("DWeb", "Discord Webhook"),
                new ThiccIndustriesVariant("Debugger", "Handler"),
                new ThiccIndustriesVariant("Config", "Config")
        );
    }
    @Override
    public Pair<String, String> processFileInJar(Path classPath, ClassNode classNode, File file, boolean isClass) {
        return null;
    }

    @Override
    public Pair<String, String> preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        for (ThiccIndustriesVariant variant : classes) {
            String className = "com/thiccindustries/debugger/" + variant.classCheck + ".class";
            if (resolve(rootFolder, className)) {
                return new Pair<>(variant.getVariant(), className);
            }
        }
        return null;
    }

    @Override
    public MalwareType getType() {
        return MalwareType.THICCINDUSTRIES;
    }

}
