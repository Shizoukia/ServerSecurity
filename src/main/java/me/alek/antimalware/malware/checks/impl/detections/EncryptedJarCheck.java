package me.alek.antimalware.malware.checks.impl.detections;

import me.alek.antimalware.malware.enums.Risk;
import me.alek.antimalware.malware.checks.CheckAdapter;
import me.alek.antimalware.malware.checks.types.nodes.DetectionNode;
import me.alek.antimalware.utils.Pair;
import me.alek.antimalware.model.PluginProperties;
import org.objectweb.asm.tree.ClassNode;

import java.io.File;
import java.nio.file.Path;
import java.util.Collections;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

public class EncryptedJarCheck extends CheckAdapter implements DetectionNode {

    @Override
    public Pair<String, String> processFileInJar(Path classPath, ClassNode classNode, File file, boolean isClass) {
        return null;
    }

    @Override
    public Pair<String, String> preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        try {
            JarFile jarFile = new JarFile(file);
            for (JarEntry entry : Collections.list(jarFile.entries())) {
                if (entry.getCompressedSize() == -1 || entry.getCrc() == -1) {
                    return new Pair<>("", null);
                }
            }
        } catch (Exception ex) {
        }
        return null;
    }

    @Override
    public String getType() {
        return "Encrypted Entry";
    }

    @Override
    public Risk getRisk() {
        return Risk.MODERATE;
    }
}
