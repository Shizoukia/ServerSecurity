package me.alek.antimalware.malware.constants.checks;

import me.alek.antimalware.malware.constants.Container;
import me.alek.antimalware.malware.constants.Registery;
import me.alek.antimalware.malware.obfuscation.checks.AbstractObfHandler;
import me.alek.antimalware.malware.obfuscation.checks.ClassObfHandler;
import me.alek.antimalware.malware.obfuscation.checks.FieldObfHandler;
import me.alek.antimalware.malware.obfuscation.checks.MethodObfHandler;
import me.alek.antimalware.malware.obfuscation.impl.classes.ClassLengthFeature;
import me.alek.antimalware.malware.obfuscation.impl.classes.InnerClassLengthFeature;
import me.alek.antimalware.malware.obfuscation.impl.classes.InterfaceLengthFeature;
import me.alek.antimalware.malware.obfuscation.impl.classes.RepetitiveWordFeature;
import me.alek.antimalware.malware.obfuscation.impl.fields.*;
import me.alek.antimalware.malware.obfuscation.impl.methods.*;

import java.util.Arrays;
import java.util.List;

public class Obfuscation {

    public static class ObfContainer extends Container<AbstractObfHandler> {

        @Override
        public Registery<AbstractObfHandler> getRegistery() {
            return new ObfRegistery(this);
        }
    }

    public static class ObfRegistery extends Registery<AbstractObfHandler> {

        public ObfRegistery(Container<AbstractObfHandler> container) {
            super(container);
        }

        @Override
        public List<AbstractObfHandler> getElements() {
            return Arrays.asList(new AbstractObfHandler(
                    new ClassObfHandler(
                            new ClassLengthFeature(),
                            new RepetitiveWordFeature(),
                            new InterfaceLengthFeature(),
                            new InnerClassLengthFeature()
                    ),
                    new MethodObfHandler(
                            new MethodCharOccurenceFeature(),
                            new MethodCharSpecialFeature(),
                            new MethodNoLetterCharFeature(),
                            new MethodLengthFeature(),
                            new AllatoriMethodFeature()
                    ),
                    new FieldObfHandler(
                            new FieldBranchlockFeature(),
                            new FieldCharOccurenceFeature(),
                            new FieldCharSpecialFeature(),
                            new FieldLengthFeature(),
                            new NumberSizeFeature(),
                            new FieldByteArrayFeature(),
                            new StringNonAsciiFeature(),
                            new StringVowelFeature(),
                            new StringBigramsFeature(),
                            new StringWordLengthFeature()
                    )
            ));
        }
    }



}
