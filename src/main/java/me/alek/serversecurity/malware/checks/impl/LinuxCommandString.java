package me.alek.serversecurity.malware.checks.impl;

import me.alek.serversecurity.malware.enums.Risk;
import me.alek.serversecurity.malware.checks.AbstractInstructionCheck;
import me.alek.serversecurity.malware.checks.types.DetectionNode;
import me.alek.serversecurity.model.PluginProperties;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.LdcInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;

public class LinuxCommandString extends AbstractInstructionCheck implements DetectionNode {

    public LinuxCommandString() {
        super (LdcInsnNode.class);
    }

    @Override
    public boolean preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        return false;
    }

    @Override
    public boolean processAbstractInsn(MethodNode methodNode, AbstractInsnNode abstractInsnNode, File file, Path classPath) {
        LdcInsnNode ldcInsnNode = (LdcInsnNode) abstractInsnNode;
        Object cst = ldcInsnNode.cst;

        if (!(cst instanceof String)) {
            return false;
        }
        String value = (String) cst;

        return value.equals("/bin/bash");
    }

    @Override
    public String getType() {
        return "Linux Command";
    }

    @Override
    public Risk getRisk() {
        return Risk.MODERATE;
    }
}
