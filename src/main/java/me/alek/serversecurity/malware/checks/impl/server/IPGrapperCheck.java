package me.alek.serversecurity.malware.checks.impl.server;

import me.alek.serversecurity.malware.enums.Risk;
import me.alek.serversecurity.malware.checks.AbstractInstructionCheck;
import me.alek.serversecurity.malware.checks.types.DetectionNode;
import me.alek.serversecurity.model.PluginProperties;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.LdcInsnNode;
import org.objectweb.asm.tree.MethodInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;

public class IPGrapperCheck extends AbstractInstructionCheck implements DetectionNode {

    public IPGrapperCheck() {
        super(MethodInsnNode.class, LdcInsnNode.class);
    }

    @Override
    public boolean preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        return false;
    }

    @Override
    public boolean processAbstractInsn(MethodNode methodNode, AbstractInsnNode abstractInsnNode, File file, Path classPath) {
        if (abstractInsnNode instanceof MethodInsnNode) {
            MethodInsnNode methodInsnNode = (MethodInsnNode) abstractInsnNode;
            final String owner = methodInsnNode.owner;
            final String name = methodInsnNode.name;

            return owner.equals("org/bukkit/entity/Player") && name.equals("getAddress");
        } else {
            LdcInsnNode ldcInsnNode = (LdcInsnNode) abstractInsnNode;
            Object value = ldcInsnNode.cst;

            if (!(value instanceof String))
                return false;

            String string = (String) value;
            return string.contains("api.ipify.org");
        }

    }

    @Override
    public String getType() {
        return "IP Grabber";
    }

    @Override
    public Risk getRisk() {
        return Risk.LOW;
    }
}
