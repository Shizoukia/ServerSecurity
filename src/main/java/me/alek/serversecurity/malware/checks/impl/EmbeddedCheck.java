package me.alek.serversecurity.malware.checks.impl;

import me.alek.serversecurity.malware.enums.Risk;
import me.alek.serversecurity.malware.checks.BaseCheck;
import me.alek.serversecurity.malware.checks.types.DetectionNode;
import me.alek.serversecurity.model.PluginProperties;
import org.objectweb.asm.tree.ClassNode;

import java.io.File;
import java.nio.file.Path;

public class EmbeddedCheck extends BaseCheck implements DetectionNode {

    private final ThreadLocal<String> jarName = new ThreadLocal<>();

    @Override
    public boolean processFileInJar(Path classPath, ClassNode classNode, File file, boolean isClass) {
        String fileName = file.getName();

        if (!fileName.equals(jarName.get())) {
            return fileName.endsWith(".jar") || fileName.endsWith(".zip") || fileName.endsWith(".jarinjar") || fileName.endsWith(".tar");
        }
        return false;
    }

    @Override
    public boolean preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        jarName.set(file.getName());
        return false;
    }

    @Override
    public String getType() {
        return "Embedded jar/zip";
    }

    @Override
    public Risk getRisk() {
        return Risk.MODERATE;
    }
}
