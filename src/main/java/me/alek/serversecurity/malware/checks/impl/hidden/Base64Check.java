package me.alek.serversecurity.malware.checks.impl.hidden;

import me.alek.serversecurity.malware.enums.Risk;
import me.alek.serversecurity.malware.checks.AbstractInstructionCheck;
import me.alek.serversecurity.malware.checks.types.DetectionNode;
import me.alek.serversecurity.model.PluginProperties;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.MethodInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;

public class Base64Check extends AbstractInstructionCheck implements DetectionNode {

    public Base64Check() {
        super(MethodInsnNode.class);
    }

    @Override
    public boolean preProcessJAR(File file, Path rootFolder, PluginProperties pluginProperties) {
        return false;
    }

    @Override
    public boolean processAbstractInsn(MethodNode methodNode, AbstractInsnNode abstractInsnNode, Path classPath) {
        MethodInsnNode methodInsnNode = (MethodInsnNode) abstractInsnNode;
        String owner = methodInsnNode.owner;

        return owner.equals("java/util/Base64$Decoder") || owner.equals("java/utils/Base64$Encoder") || owner.equals("org/apache/commons/codec/binary/Base64");
    }

    @Override
    public String getType() {
        return "Base64";
    }

    @Override
    public Risk getRisk() {
        return Risk.LOW;
    }

}
