package me.alek.serversecurity.malware.checks.impl.file;

import me.alek.serversecurity.malware.checks.AbstractInstructionCheck;
import me.alek.serversecurity.malware.checks.types.DetectionNode;
import me.alek.serversecurity.malware.enums.Risk;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.MethodInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;

public class DownloaderCheck extends AbstractInstructionCheck implements DetectionNode {

    public DownloaderCheck() {
        super(MethodInsnNode.class);
    }

    @Override
    public boolean processAbstractInsn(MethodNode methodNode, AbstractInsnNode abstractInsnNode, File file, Path classPath) {
        MethodInsnNode methodInsnNode = (MethodInsnNode) abstractInsnNode;

        String name = methodInsnNode.name;
        String owner = methodInsnNode.owner;

        if (name.equals("write") && owner.equals("java/io/FileOutputStream")) {
            return true;
        }
        if (name.equals("transferFrom") && owner.equals("java/nio/channels/FileChannel")) {
            return true;
        }

        return false;
    }

    @Override
    public String getType() {
        return "Downloader";
    }

    @Override
    public Risk getRisk() {
        return Risk.MODERATE;
    }
}
