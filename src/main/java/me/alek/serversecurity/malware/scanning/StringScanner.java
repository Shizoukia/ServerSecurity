package me.alek.serversecurity.malware.scanning;

import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.ClassNode;
import org.objectweb.asm.tree.LdcInsnNode;
import org.objectweb.asm.tree.MethodNode;

import java.io.File;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class StringScanner extends JarBytecodeScanner<String, String> {

    public StringScanner(List<File> files) {
        super(files, ScannerDelegateFactory.STRING_SCANNER_FACTORY.get());
    }

    public StringScanner(File file) {
        this(Collections.singletonList(file));
    }

    @Override
    public Comparator<String> getComparator() {
        return null;
    }

    public static class StringScannerRegistry implements ScannerEventually<String, String> {

        private final List<String> strings = new ArrayList<>();

        @Override
        public List<String> getAllRegistered() {
            return strings;
        }

        @Override
        public void register(String value) {
            strings.add(value);
        }

        @Override
        public void doAdding(List<String> results) {
            results.addAll(strings);
        }
    }

    public static class StringScannerDelegate implements ScannerDelegate<String, String> {

        @Override
        public ScannerEventually<String, String> preHandleAndGetRegistry(File file, Path rootFolder) {
            return new StringScannerRegistry();
        }

        @Override
        public void handle(ScannerEventually<String, String> registry, Path classPath, ClassNode classNode, File file, boolean validClassPath) {
            if (classNode == null) return;
            for (MethodNode methodNode : classNode.methods) {
                for (AbstractInsnNode abstractInsnNode : methodNode.instructions.toArray()) {

                    if (abstractInsnNode instanceof LdcInsnNode) {
                        Object cst = ((LdcInsnNode)abstractInsnNode).cst;

                        if (cst instanceof String) {
                            registry.register((String) cst);
                        }
                    }
                }
            }
        }

        @Override
        public void handlePostScan() {

        }

        @Override
        public void handlePreScan() {

        }
    }
}
