package me.alek.serversecurity.malware.scanning;

import me.alek.serversecurity.malware.model.ResultData;
import me.alek.serversecurity.malware.model.result.CheckResult;

import java.util.Map;
import java.util.function.Function;
import java.util.function.Supplier;

public class ScannerDelegateFactory<T, V> {

    public static final Function<Boolean, ScannerDelegateFactory<ResultData, CheckResult>> MALWARE_SCANNER_FACTORY =
            (ignoreServersideChecks) -> new ScannerDelegateFactory<>(() -> new MalwareScanner.MalwareScannerDelegate(ignoreServersideChecks));

    public static final Supplier<ScannerDelegateFactory<String, String>> STRING_SCANNER_FACTORY =
            () -> new ScannerDelegateFactory<>(StringScanner.StringScannerDelegate::new);

    public static final Supplier<ScannerDelegateFactory<Map<String, Long>, Map.Entry<String, Long>>> FILE_SIZE_SCANNER_FACTORY =
            () -> new ScannerDelegateFactory<>(FileSizeScanner.FileSizeScannerDelegate::new);

    private final Supplier<ScannerDelegate<T, V>> scannerDelegateSupplier;

    public ScannerDelegateFactory(Supplier<ScannerDelegate<T, V>> scannerDelegateSupplier) {
        this.scannerDelegateSupplier = scannerDelegateSupplier;
    }

    public ScannerDelegate<T, V> create() {
        return scannerDelegateSupplier.get();
    }
}
