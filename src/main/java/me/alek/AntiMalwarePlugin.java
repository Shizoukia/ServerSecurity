package me.alek;

import lombok.Getter;
import me.alek.cache.containers.AcceptedPluginsForceOPContainer;
import me.alek.command.commands.MainCommand;
import me.alek.scanning.ScanManager;
import me.alek.scanning.Scanner;
import me.alek.utils.JARFinder;
import me.alek.utils.UpdateChecker;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.io.File;
import java.util.logging.Logger;

public class AntiMalwarePlugin extends JavaPlugin implements Listener {

    @Getter
    private static AntiMalwarePlugin instance;

    @Getter
    private static AcceptedPluginsForceOPContainer acceptedPluginsForceOPContainer;

    private String latestVersion = null;

    @Override
    public void onEnable() {
        instance = this;
        new UpdateChecker(this, 109025).getLatestVersion(version -> {
            getLogger().info(version + " " + getDescription().getVersion());
            if (!this.getDescription().getVersion().equals(version)) {
                getLogger().info("[AntiMalware] Fandt en opdatering: v" + version + ". Download:");
                getLogger().info("https://www.spigotmc.org/resources/antimalware.109025/");
                latestVersion = version;
            }
        });
        acceptedPluginsForceOPContainer = new AcceptedPluginsForceOPContainer();
        this.getCommand("antimalware").setExecutor(new MainCommand());
        this.getServer().getPluginManager().registerEvents(this, this);
        Logger logger = Logger.getLogger("Minecraft");
        logger.info("[AntiMalware] AntiMalware er nu loadet! Pluginnet er lavet af Alek05. Brug /am.");
        File dataFolder = AntiMalwarePlugin.getInstance().getDataFolder().getParentFile();

        new BukkitRunnable() {
            @Override
            public void run() {
                new Scanner(JARFinder.findAllJars(dataFolder)).startScan();
                if (ScanManager.getLatestScanner().hasMalware()) {
                    Bukkit.getOnlinePlayers()
                            .stream()
                            .filter(Player::isOp)
                            .forEach(player -> {
                                player.sendMessage("§8[§6AntiMalware§8] §7Auto-scanner plugins for backdoors...");
                                sendWarning(player);
                            });
                }
            }
        }.runTaskTimerAsynchronously(this, 0L, 12000L);
    }

    private void sendWarning(Player player) {
        player.sendMessage("§8[§6AntiMalware§8] §cDer er fundet virus i et plugin, som kan være en potentiel backdoor! Brug /am deepscan for mere information!");
        player.sendMessage("§8[§6AntiMalware§8] §cOBS: Læs det ovenstående for serverens sikkerhed. Backdoor i plugins kan føre til grief!");
    }

    @Override
    public void onDisable() {

    }

    @EventHandler
    public void onJoin(PlayerJoinEvent event) {
        Player player = event.getPlayer();
        if (!player.isOp()) return;
        if (!ScanManager.getLatestScanner().hasMalware()) return;
        if (latestVersion != null) {
            player.sendMessage("§8[§6AntiMalware§8] §7Fandt en opdatering: v" + latestVersion + "§7. Download:");
            player.sendMessage("§ahttps://www.spigotmc.org/resources/antimalware.109025/");
        }
    }

}

